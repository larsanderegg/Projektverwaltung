// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ch.lan.teko.controller;

import ch.lan.teko.controller.ApplicationConversionServiceFactoryBean;
import ch.lan.teko.model.Activity;
import ch.lan.teko.model.DocumentReference;
import ch.lan.teko.model.Employee;
import ch.lan.teko.model.Milestone;
import ch.lan.teko.model.PersonalResource;
import ch.lan.teko.model.Phase;
import ch.lan.teko.model.ProcessModel;
import ch.lan.teko.model.Project;
import ch.lan.teko.model.Resource;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Activity, String> ApplicationConversionServiceFactoryBean.getActivityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.Activity, java.lang.String>() {
            public String convert(Activity activity) {
                return new StringBuilder().append(activity.getStartDate()).append(' ').append(activity.getEndDate()).append(' ').append(activity.getPlanedStartDate()).append(' ').append(activity.getPlanedEndDate()).toString();
            }
        };
    }
    
    public Converter<Long, Activity> ApplicationConversionServiceFactoryBean.getIdToActivityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.Activity>() {
            public ch.lan.teko.model.Activity convert(java.lang.Long id) {
                return Activity.findActivity(id);
            }
        };
    }
    
    public Converter<String, Activity> ApplicationConversionServiceFactoryBean.getStringToActivityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.Activity>() {
            public ch.lan.teko.model.Activity convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Activity.class);
            }
        };
    }
    
    public Converter<DocumentReference, String> ApplicationConversionServiceFactoryBean.getDocumentReferenceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.DocumentReference, java.lang.String>() {
            public String convert(DocumentReference documentReference) {
                return new StringBuilder().append(documentReference.getName()).toString();
            }
        };
    }
    
    public Converter<Long, DocumentReference> ApplicationConversionServiceFactoryBean.getIdToDocumentReferenceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.DocumentReference>() {
            public ch.lan.teko.model.DocumentReference convert(java.lang.Long id) {
                return DocumentReference.findDocumentReference(id);
            }
        };
    }
    
    public Converter<String, DocumentReference> ApplicationConversionServiceFactoryBean.getStringToDocumentReferenceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.DocumentReference>() {
            public ch.lan.teko.model.DocumentReference convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DocumentReference.class);
            }
        };
    }
    
    public Converter<Employee, String> ApplicationConversionServiceFactoryBean.getEmployeeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.Employee, java.lang.String>() {
            public String convert(Employee employee) {
                return new StringBuilder().append(employee.getName()).append(' ').append(employee.getSurname()).append(' ').append(employee.getPensum()).append(' ').append(employee.getId()).toString();
            }
        };
    }
    
    public Converter<Long, Employee> ApplicationConversionServiceFactoryBean.getIdToEmployeeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.Employee>() {
            public ch.lan.teko.model.Employee convert(java.lang.Long id) {
                return Employee.findEmployee(id);
            }
        };
    }
    
    public Converter<String, Employee> ApplicationConversionServiceFactoryBean.getStringToEmployeeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.Employee>() {
            public ch.lan.teko.model.Employee convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Employee.class);
            }
        };
    }
    
    public Converter<Milestone, String> ApplicationConversionServiceFactoryBean.getMilestoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.Milestone, java.lang.String>() {
            public String convert(Milestone milestone) {
                return new StringBuilder().append(milestone.getName()).append(' ').append(milestone.getPlanedDate()).toString();
            }
        };
    }
    
    public Converter<Long, Milestone> ApplicationConversionServiceFactoryBean.getIdToMilestoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.Milestone>() {
            public ch.lan.teko.model.Milestone convert(java.lang.Long id) {
                return Milestone.findMilestone(id);
            }
        };
    }
    
    public Converter<String, Milestone> ApplicationConversionServiceFactoryBean.getStringToMilestoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.Milestone>() {
            public ch.lan.teko.model.Milestone convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Milestone.class);
            }
        };
    }
    
    public Converter<PersonalResource, String> ApplicationConversionServiceFactoryBean.getPersonalResourceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.PersonalResource, java.lang.String>() {
            public String convert(PersonalResource personalResource) {
                return new StringBuilder().append(personalResource.getPlaned()).append(' ').append(personalResource.getEffectiv()).append(' ').append(personalResource.getExplanation()).append(' ').append(personalResource.getJob()).toString();
            }
        };
    }
    
    public Converter<Long, PersonalResource> ApplicationConversionServiceFactoryBean.getIdToPersonalResourceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.PersonalResource>() {
            public ch.lan.teko.model.PersonalResource convert(java.lang.Long id) {
                return PersonalResource.findPersonalResource(id);
            }
        };
    }
    
    public Converter<String, PersonalResource> ApplicationConversionServiceFactoryBean.getStringToPersonalResourceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.PersonalResource>() {
            public ch.lan.teko.model.PersonalResource convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PersonalResource.class);
            }
        };
    }
    
    public Converter<Phase, String> ApplicationConversionServiceFactoryBean.getPhaseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.Phase, java.lang.String>() {
            public String convert(Phase phase) {
                return new StringBuilder().append(phase.getReviewDate()).append(' ').append(phase.getApprovalDate()).append(' ').append(phase.getPlanedReviewDate()).append(' ').append(phase.getProgress()).toString();
            }
        };
    }
    
    public Converter<Long, Phase> ApplicationConversionServiceFactoryBean.getIdToPhaseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.Phase>() {
            public ch.lan.teko.model.Phase convert(java.lang.Long id) {
                return Phase.findPhase(id);
            }
        };
    }
    
    public Converter<String, Phase> ApplicationConversionServiceFactoryBean.getStringToPhaseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.Phase>() {
            public ch.lan.teko.model.Phase convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Phase.class);
            }
        };
    }
    
    public Converter<ProcessModel, String> ApplicationConversionServiceFactoryBean.getProcessModelToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.ProcessModel, java.lang.String>() {
            public String convert(ProcessModel processModel) {
                return new StringBuilder().append(processModel.getName()).append(' ').append(processModel.getPhases()).toString();
            }
        };
    }
    
    public Converter<Long, ProcessModel> ApplicationConversionServiceFactoryBean.getIdToProcessModelConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.ProcessModel>() {
            public ch.lan.teko.model.ProcessModel convert(java.lang.Long id) {
                return ProcessModel.findProcessModel(id);
            }
        };
    }
    
    public Converter<String, ProcessModel> ApplicationConversionServiceFactoryBean.getStringToProcessModelConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.ProcessModel>() {
            public ch.lan.teko.model.ProcessModel convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProcessModel.class);
            }
        };
    }
    
    public Converter<Project, String> ApplicationConversionServiceFactoryBean.getProjectToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.Project, java.lang.String>() {
            public String convert(Project project) {
                return new StringBuilder().append(project.getProgress()).append(' ').append(project.getApprovalDate()).append(' ').append(project.getName()).append(' ').append(project.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Project> ApplicationConversionServiceFactoryBean.getIdToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.Project>() {
            public ch.lan.teko.model.Project convert(java.lang.Long id) {
                return Project.findProject(id);
            }
        };
    }
    
    public Converter<String, Project> ApplicationConversionServiceFactoryBean.getStringToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.Project>() {
            public ch.lan.teko.model.Project convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Project.class);
            }
        };
    }
    
    public Converter<Resource, String> ApplicationConversionServiceFactoryBean.getResourceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ch.lan.teko.model.Resource, java.lang.String>() {
            public String convert(Resource resource) {
                return new StringBuilder().append(resource.getPlaned()).append(' ').append(resource.getEffectiv()).append(' ').append(resource.getExplanation()).toString();
            }
        };
    }
    
    public Converter<Long, Resource> ApplicationConversionServiceFactoryBean.getIdToResourceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ch.lan.teko.model.Resource>() {
            public ch.lan.teko.model.Resource convert(java.lang.Long id) {
                return Resource.findResource(id);
            }
        };
    }
    
    public Converter<String, Resource> ApplicationConversionServiceFactoryBean.getStringToResourceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ch.lan.teko.model.Resource>() {
            public ch.lan.teko.model.Resource convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Resource.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getActivityToStringConverter());
        registry.addConverter(getIdToActivityConverter());
        registry.addConverter(getStringToActivityConverter());
        registry.addConverter(getDocumentReferenceToStringConverter());
        registry.addConverter(getIdToDocumentReferenceConverter());
        registry.addConverter(getStringToDocumentReferenceConverter());
        registry.addConverter(getEmployeeToStringConverter());
        registry.addConverter(getIdToEmployeeConverter());
        registry.addConverter(getStringToEmployeeConverter());
        registry.addConverter(getMilestoneToStringConverter());
        registry.addConverter(getIdToMilestoneConverter());
        registry.addConverter(getStringToMilestoneConverter());
        registry.addConverter(getPersonalResourceToStringConverter());
        registry.addConverter(getIdToPersonalResourceConverter());
        registry.addConverter(getStringToPersonalResourceConverter());
        registry.addConverter(getPhaseToStringConverter());
        registry.addConverter(getIdToPhaseConverter());
        registry.addConverter(getStringToPhaseConverter());
        registry.addConverter(getProcessModelToStringConverter());
        registry.addConverter(getIdToProcessModelConverter());
        registry.addConverter(getStringToProcessModelConverter());
        registry.addConverter(getProjectToStringConverter());
        registry.addConverter(getIdToProjectConverter());
        registry.addConverter(getStringToProjectConverter());
        registry.addConverter(getResourceToStringConverter());
        registry.addConverter(getIdToResourceConverter());
        registry.addConverter(getStringToResourceConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
